extern crate rust;

use std::{fs::read_to_string, path::PathBuf, slice::from_raw_parts, str::from_utf8_unchecked};

use rust::{CharsMap, Dimensions, Layout};
use usfm::{BookContents, parse};

static MANIFEST_DIR: &str = env!("CARGO_MANIFEST_DIR");
#[rustfmt::skip]
const MAP: [(u32, (f32, f32)); 96] = [(32, (13.0, 0.0)), (34, (13.376022, 0.0)), (70, (16.768036, 0.0)), (90, (18.33606, 0.0)), (56, (18.04802, 0.0)), (63, (12.92804, 0.0)), (104, (18.272034, 0.0)), (110, (18.368042, 0.0)), (44, (7.8720093, 0.0)), (79, (24.896057, 0.0)), (105, (8.096008, 0.0)), (107, (16.70398, 0.0)), (1493, (-19.203125, 0.0)), (83, (17.024048, 0.0)), (1461, (0.0, 0.0)), (120, (16.35205, 0.0)), (89, (19.488037, 0.0)), (74, (16.000061, 0.0)), (1460, (0.0, 0.0)), (106, (8.096008, 0.0)), (46, (7.8720093, 0.0)), (65, (21.216064, 0.0)), (86, (21.664063, 0.0)), (108, (8.736084, 0.0)), (98, (18.848022, 0.0)), (52, (18.048035, 0.0)), (55, (18.048035, 0.0)), (59, (7.8720093, 0.0)), (33, (8.832016, 0.0)), (67, (19.840027, 0.0)), (119, (25.312012, 0.0)), (1501, (-19.203125, 0.0)), (73, (8.608032, 0.0)), (85, (22.016052, 0.0)), (8217, (7.5200195, 0.0)), (109, (27.552002, 0.0)), (75, (20.128052, 0.0)), (99, (14.496033, 0.0)), (8220, (13.343994, 0.0)), (81, (24.896057, 0.0)), (50, (18.048035, 0.0)), (54, (18.048035, 0.0)), (1500, (-19.203125, 0.0)), (48, (18.048035, 0.0)), (100, (18.848022, 0.0)), (8216, (7.5200195, 0.0)), (111, (18.880005, 0.0)), (84, (18.080017, 0.0)), (69, (18.272034, 0.0)), (103, (18.496033, 0.0)), (121, (15.904053, 0.0)), (57, (18.048035, 0.0)), (72, (22.560059, 0.0)), (1468, (0.0, 0.0)), (118, (16.608032, 0.0)), (88, (20.800049, 0.0)), (116, (12.864014, 0.0)), (1457, (0.0, 0.0)), (71, (21.504059, 0.0)), (78, (23.29602, 0.0)), (1488, (-19.203125, 0.0)), (1465, (0.0, 0.0)), (8221, (13.343994, 0.0)), (1492, (-19.203125, 0.0)), (82, (20.128052, 0.0)), (80, (19.456055, 0.0)), (113, (18.848022, 0.0)), (42, (15.360031, 0.0)), (68, (22.81604, 0.0)), (76, (16.608032, 0.0)), (61, (18.048035, 0.0)), (114, (12.352051, 0.0)), (117, (18.368042, 0.0)), (41, (10.368027, 0.0)), (1425, (134.42188, 0.0)), (53, (18.048035, 0.0)), (1497, (-19.203125, 0.0)), (102, (12.352051, 0.0)), (97, (16.70404, 0.0)), (43, (18.048035, 0.0)), (45, (9.568024, 0.0)), (77, (27.87207, 0.0)), (124, (8.9279785, 0.0)), (58, (7.8720093, 0.0)), (1504, (115.21875, 0.0)), (87, (30.048096, 0.0)), (112, (18.848022, 0.0)), (49, (18.048035, 0.0)), (122, (15.0720215, 0.0)), (8212, (31.87207, 0.0)), (66, (20.57605, 0.0)), (115, (14.271973, 0.0)), (51, (18.048035, 0.0)), (40, (12.928024, 0.0)), (101, (17.888, 0.0)), (92, (12.288025, 0.0))];

#[test]
fn layout() {
    let file = PathBuf::from(MANIFEST_DIR).join("usfm/02-GENengwebpb.usfm");
    let input = read_to_string(file).unwrap();
    let book = parse(&input);
    let mut paragraphs = book
        .contents
        .iter()
        .filter_map(|c| match c {
            BookContents::Paragraph { contents, .. } => Some(contents),
            _ => None,
        })
        .take(1);
    let paragraph = paragraphs.next().unwrap();

    let map = CharsMap::from_iter(MAP);
    let mut layout = Layout::new(
        &map,
        Dimensions {
            width: 500.0,
            height: 500.0,
            line_height: 30.0,
        },
    );

    layout.layout(paragraph);
    println!(
        "{:?}",
        layout
            .page
            .into_iter()
            .map(|t| {
                let s = unsafe { from_utf8_unchecked(from_raw_parts(t.0 as *const u8, t.1)) };
                s.chars()
                    .map(|c| match c {
                        ' ' => 13.0 + t.3.word_spacing,
                        c => map[&(c as u32)].0,
                    })
                    .sum::<f32>()
            })
            .collect::<Vec<_>>()
    );
}
